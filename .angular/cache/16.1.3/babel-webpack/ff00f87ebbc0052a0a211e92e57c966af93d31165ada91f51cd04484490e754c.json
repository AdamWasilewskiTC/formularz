{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../form-service.service\";\nimport * as i3 from \"@angular/common\";\nfunction DynamicFormComponent_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", control_r1.type)(\"formControlName\", control_r1.name);\n  }\n}\nfunction DynamicFormComponent_div_1_div_4_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r7);\n  }\n}\nfunction DynamicFormComponent_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"select\", 5);\n    i0.ɵɵtemplate(2, DynamicFormComponent_div_1_div_4_option_2_Template, 2, 2, \"option\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", control_r1.options);\n  }\n}\nfunction DynamicFormComponent_div_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.getErrorMessage(control_r1), \" \");\n  }\n}\nfunction DynamicFormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, DynamicFormComponent_div_1_div_3_Template, 2, 2, \"div\", 3);\n    i0.ɵɵtemplate(4, DynamicFormComponent_div_1_div_4_Template, 3, 2, \"div\", 3);\n    i0.ɵɵtemplate(5, DynamicFormComponent_div_1_span_5_Template, 2, 1, \"span\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(control_r1.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type !== \"select\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", control_r1.type === \"select\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.dynamicForm.controls[control_r1.name] == null ? null : ctx_r0.dynamicForm.controls[control_r1.name].invalid) && (ctx_r0.dynamicForm.controls[control_r1.name] == null ? null : ctx_r0.dynamicForm.controls[control_r1.name].touched));\n  }\n}\nexport class DynamicFormComponent {\n  constructor(formBuilder, formService) {\n    this.formBuilder = formBuilder;\n    this.formService = formService;\n    this.dynamicForm = this.formBuilder.group({});\n  }\n  ngOnInit() {\n    const formStructure = this.formService.getFormStructure();\n    let formGroup = {};\n    formStructure.forEach(control => {});\n    this.dynamicForm = this.formBuilder.group(formGroup);\n  }\n  onSubmit() {\n    console.log(this.dynamicForm.value);\n  }\n  getErrorMessage(control) {\n    const formControl = this.dynamicForm.get(control.name);\n    if (!formControl) {\n      return '';\n    }\n    for (let validation of control.validations) {\n      if (formControl.hasError(validation.name)) {\n        return validation.message;\n      }\n    }\n    return '';\n  }\n}\nDynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) {\n  return new (t || DynamicFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FormService));\n};\nDynamicFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DynamicFormComponent,\n  selectors: [[\"app-dynamic-form\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [4, \"ngIf\"], [3, \"type\", \"formControlName\"], [3, \"formControlName\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function DynamicFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function DynamicFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtemplate(1, DynamicFormComponent_div_1_Template, 6, 4, \"div\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.dynamicForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formStructure);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","control_r1","type","name","ɵɵtext","option_r7","ɵɵtextInterpolate","ɵɵtemplate","DynamicFormComponent_div_1_div_4_option_2_Template","options","ɵɵtextInterpolate1","ctx_r4","getErrorMessage","DynamicFormComponent_div_1_div_3_Template","DynamicFormComponent_div_1_div_4_Template","DynamicFormComponent_div_1_span_5_Template","label","ctx_r0","dynamicForm","controls","invalid","touched","DynamicFormComponent","constructor","formBuilder","formService","group","ngOnInit","formStructure","getFormStructure","formGroup","forEach","control","onSubmit","console","log","value","formControl","get","validation","validations","hasError","message","ɵɵdirectiveInject","i1","FormBuilder","i2","FormService","selectors","decls","vars","consts","template","DynamicFormComponent_Template","rf","ctx","ɵɵlistener","DynamicFormComponent_Template_form_ngSubmit_0_listener","DynamicFormComponent_div_1_Template"],"sources":["C:\\Users\\Uczen\\Desktop\\angular-dynamic-forms\\src\\app\\dynamic-form\\dynamic-form.component.ts","C:\\Users\\Uczen\\Desktop\\angular-dynamic-forms\\src\\app\\dynamic-form\\dynamic-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FormService } from '../form-service.service';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.css']\n})\nexport class DynamicFormComponent implements OnInit {\n  dynamicForm: FormGroup = this.formBuilder.group({});\n\n  constructor(private formBuilder: FormBuilder, public formService: FormService) { }\n\n  ngOnInit() {\n    const formStructure = this.formService.getFormStructure();\n\n    let formGroup: Record<string, any> = {};\n    formStructure.forEach(control => {\n      \n\n      \n    });\n\n    this.dynamicForm = this.formBuilder.group(formGroup);\n  }\n\n  onSubmit() {\n    console.log(this.dynamicForm.value);\n  }\n\n  getErrorMessage(control: any) {\n    const formControl = this.dynamicForm.get(control.name);\n\n    if (!formControl) {\n      return '';\n    }\n\n    for (let validation of control.validations) {\n      if (formControl.hasError(validation.name)) {\n        return validation.message;\n      }\n    }\n\n    return '';\n  }\n}","<form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmit()\">\n  <div *ngFor=\"let control of formStructure\">\n    <label>{{control.label}}</label>\n    <div *ngIf=\"control.type !== 'select'\">\n      <input [type]=\"control.type\" [formControlName]=\"control.name\">\n    </div>\n    <div *ngIf=\"control.type === 'select'\">\n      <select [formControlName]=\"control.name\">\n        <option *ngFor=\"let option of control.options\" [value]=\"option\">{{option}}</option>\n      </select>\n    </div>\n    <span *ngIf=\"dynamicForm.controls[control.name]?.invalid && dynamicForm.controls[control.name]?.touched\">\n      {{getErrorMessage(control)}}\n    </span>\n  </div>\n  <button type=\"submit\">Submit</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}