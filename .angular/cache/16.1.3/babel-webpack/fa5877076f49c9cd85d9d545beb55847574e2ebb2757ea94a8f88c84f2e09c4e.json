{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../form-service.service\";\nimport * as i3 from \"@angular/common\";\nfunction DynamicFormComponent_div_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getErrorMessage(control_r1), \" \");\n  }\n}\nfunction DynamicFormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 3);\n    i0.ɵɵtemplate(4, DynamicFormComponent_div_1_span_4_Template, 2, 1, \"span\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(control_r1.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", control_r1.type)(\"formControlName\", control_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.dynamicForm.controls[control_r1.name] == null ? null : ctx_r0.dynamicForm.controls[control_r1.name].invalid) && (ctx_r0.dynamicForm.controls[control_r1.name] == null ? null : ctx_r0.dynamicForm.controls[control_r1.name].touched));\n  }\n}\nexport class DynamicFormComponent {\n  constructor(formBuilder, formService) {\n    this.formBuilder = formBuilder;\n    this.formService = formService;\n    this.dynamicForm = this.formBuilder.group({});\n  }\n  ngOnInit() {\n    const formStructure = this.formService.getFormStructure();\n    let formGroup = {};\n    formStructure.forEach(control => {\n      let controlValidators = [];\n      if (control.validations) {\n        control.validations.forEach(validation => {\n          if (validation.validator === 'required') controlValidators.push(Validators.required);\n          if (validation.validator === 'email') controlValidators.push(Validators.email);\n          // Add more built-in validators as needed\n        });\n      }\n\n      formGroup[control.name] = [control.value || '', controlValidators];\n    });\n    this.dynamicForm = this.formBuilder.group(formGroup);\n  }\n  onSubmit() {\n    console.log(this.dynamicForm.value);\n  }\n  getErrorMessage(control) {\n    const formControl = this.dynamicForm.get(control.name);\n    if (!formControl) {\n      return '';\n    }\n    for (let validation of control.validations) {\n      if (formControl.hasError(validation.name)) {\n        return validation.message;\n      }\n    }\n    return '';\n  }\n}\nDynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) {\n  return new (t || DynamicFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FormService));\n};\nDynamicFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DynamicFormComponent,\n  selectors: [[\"app-dynamic-form\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [3, \"type\", \"formControlName\"], [4, \"ngIf\"]],\n  template: function DynamicFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function DynamicFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtemplate(1, DynamicFormComponent_div_1_Template, 5, 4, \"div\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.dynamicForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.formService.formStructure);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","getErrorMessage","control_r1","ɵɵelement","ɵɵtemplate","DynamicFormComponent_div_1_span_4_Template","ɵɵtextInterpolate","label","ɵɵproperty","type","name","ctx_r0","dynamicForm","controls","invalid","touched","DynamicFormComponent","constructor","formBuilder","formService","group","ngOnInit","formStructure","getFormStructure","formGroup","forEach","control","controlValidators","validations","validation","validator","push","required","email","value","onSubmit","console","log","formControl","get","hasError","message","ɵɵdirectiveInject","i1","FormBuilder","i2","FormService","selectors","decls","vars","consts","template","DynamicFormComponent_Template","rf","ctx","ɵɵlistener","DynamicFormComponent_Template_form_ngSubmit_0_listener","DynamicFormComponent_div_1_Template"],"sources":["C:\\Users\\Uczen\\Desktop\\angular-dynamic-forms\\src\\app\\dynamic-form\\dynamic-form.component.ts","C:\\Users\\Uczen\\Desktop\\angular-dynamic-forms\\src\\app\\dynamic-form\\dynamic-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FormService } from '../form-service.service';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.css']\n})\nexport class DynamicFormComponent implements OnInit {\n  dynamicForm: FormGroup = this.formBuilder.group({});\n\n  constructor(private formBuilder: FormBuilder, public formService: FormService) { }\n\n  ngOnInit() {\n    const formStructure = this.formService.getFormStructure();\n\n    let formGroup: Record<string, any> = {};\n    formStructure.forEach(control => {\n      let controlValidators: Validators[] = [];\n\n      if (control.validations) {\n        control.validations.forEach(validation => {\n          if (validation.validator === 'required') controlValidators.push(Validators.required);\n          if (validation.validator === 'email') controlValidators.push(Validators.email);\n          // Add more built-in validators as needed\n        });\n      }\n\n      formGroup[control.name] = [control.value || '', controlValidators];\n    });\n\n    this.dynamicForm = this.formBuilder.group(formGroup);\n  }\n\n  onSubmit() {\n    console.log(this.dynamicForm.value);\n  }\n\n  getErrorMessage(control: any) {\n    const formControl = this.dynamicForm.get(control.name);\n\n    if (!formControl) {\n      return '';\n    }\n\n    for (let validation of control.validations) {\n      if (formControl.hasError(validation.name)) {\n        return validation.message;\n      }\n    }\n\n    return '';\n  }\n}","<form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmit()\">\n  <div *ngFor=\"let control of formService.formStructure\">\n    <label>{{control.label}}</label>\n    <input [type]=\"control.type\" [formControlName]=\"control.name\">\n    <span *ngIf=\"dynamicForm.controls[control.name]?.invalid && dynamicForm.controls[control.name]?.touched\">\n      {{getErrorMessage(control)}}\n    </span>\n  </div>\n  <button type=\"submit\">Submit</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}